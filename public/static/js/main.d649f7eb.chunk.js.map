{"version":3,"sources":["Components/Contacts/List/Component.jsx","Components/Contacts/List/Container.jsx","Actions/ContactList/all.jsx","Helpers/Constants.jsx","Components/Contacts/Form/Component.jsx","Components/Contacts/Form/Container.jsx","Actions/ContactList/create.jsx","Actions/ContactList/edit.jsx","Actions/ContactList/update.jsx","Actions/ContactList/save.jsx","Components/Users/List/Component.jsx","Components/Users/List/Container.jsx","Actions/User/all.jsx","Components/Users/Form/Component.jsx","Components/Users/Form/Container.jsx","Actions/User/create.jsx","Actions/User/edit.jsx","Actions/User/update.jsx","Actions/User/save.jsx","Helpers/SessionStorage.jsx","Components/Layout/Header/Header.jsx","Reducers/DashboardReducer.jsx","Clients/BaseClient.jsx","Clients/Auth.jsx","Actions/Auth/userLoggedIn.jsx","Reducers/AuthReducer.jsx","Clients/UserClient.jsx","Actions/User/receivedAll.jsx","Actions/User/receivedForEdit.jsx","Actions/User/saved.jsx","Actions/User/updated.jsx","Reducers/UserReducer.jsx","Clients/ContactListClient.jsx","Actions/ContactList/receivedAll.jsx","Actions/ContactList/receivedForEdit.jsx","Actions/ContactList/saved.jsx","Actions/ContactList/updated.jsx","Reducers/ContactListReducer.jsx","Middlewares/AuthMiddleware.jsx","store.jsx","Actions/Auth/logoutUser.jsx","Components/Layout/Header/HeaderContainer.jsx","Components/Layout/Sidebar/Sidebar.jsx","Components/Layout/Sidebar/SidebarContainer.jsx","App.jsx","AppContainer.jsx","history.jsx","Components/Auth/Login/Login.jsx","Components/Auth/Login/LoginContainer.jsx","Actions/Auth/loginUser.jsx","Actions/Auth/loginScreenDisplayed.jsx","index.js","env.js"],"names":["Component","props","state","redirect","contacts","activePage","perPage","totalPageCount","selectedPage","searchTerm","all","newProps","this","setState","data","selected","e","target","value","className","style","type","name","placeholder","onChange","search","bind","map","contact","key","id","first_name","last_name","email","created_at","to","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","handlePageChange","containerClassName","subContainerClassName","activeClassName","React","Container","connect","ownProps","ContactListReducer","AuthReducer","dispatch","page","limit","actionType","match","params","edit","create","update","save","history","push","htmlFor","handleFirstNameChange","maxLength","required","handleLastNameChange","handleEmailChange","onClick","handleSubmit","users","user","username","UserReducer","password","handleUsernameChange","handlePasswordChange","SessionStorage","token","sessionStorage","setItem","removeItem","getItem","Header","imageHash","Date","now","logoutUser","href","data-toggle","role","src","alt","getUsername","initialState","BaseClient","res","response","status","clearUserData","window","location","replace","NotificationManager","warning","error","errorParameter","singleError","errorKey","message","Auth","loginUser","url","baseUrl","axios","post","then","store","image","catch","handleError","apiUrl","UserClient","get","headers","getToken","items","put","ContactListClient","middleware","routerMiddleware","browserHistory","createStore","combineReducers","DashboardReducer","action","Object","assign","authClient","setUserData","userClient","contactListClient","applyMiddleware","next","HeaderContainer","Sidebar","currentRoute","pathname","data-widget","SidebarContainer","withRouter","App","exact","path","component","ContactListContainer","ContactListFormContainer","UserContainer","UserFormContainer","AppContainer","createHistory","require","createBrowserHistory","Login","document","body","classList","add","remove","LoginContainer","loginScreenDisplayed","jQuery","render","getElementById"],"mappings":"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","file":"static/js/main.d649f7eb.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\nexport default class Component extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirect: false,\n            contacts: [],\n            activePage: 1,\n            perPage: 10,\n            totalPageCount: 0,\n            selectedPage: 1,\n            searchTerm: \"\"\n        };\n\n        this.props.all(this.state.activePage, this.state.perPage, this.state.searchTerm);\n    }\n\n    componentWillReceiveProps(newProps) {\n        let state = this.state;\n        state.contacts = newProps.contacts;\n        state.totalPageCount = newProps.totalPageCount;\n        state.redirect = newProps.redirect;\n        this.setState(state);\n    }\n\n    handlePageChange(data) {\n        let state = this.state;\n        state.selectedPage = data.selected + 1;\n        this.setState(state);\n        this.props.all(state.selectedPage, this.state.perPage, this.state.searchTerm);\n    }\n\n    search(e) {\n        let state = this.state;\n        state.searchTerm = e.target.value;\n        this.setState(state);\n        this.props.all(1, this.state.perPage, e.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"box\">\n                    <div className=\"box-header\">\n                        <h3 className=\"box-title\">Contacts List</h3>\n\n                        <div className=\"box-tools\">\n                            <div className=\"input-group input-group-sm\" style={{'width': '150px'}}>\n                                <input type=\"text\" name=\"table_search\" className=\"form-control pull-right\"\n                                       placeholder=\"Search\" onChange={this.search.bind(this)}/>\n\n                                <div className=\"input-group-btn\">\n                                    <button type=\"submit\" className=\"btn btn-default\"><i\n                                        className=\"fa fa-search\"/></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"box-body table-responsive no-padding\">\n                        <table className=\"table table-hover\">\n                            <tbody>\n                            <tr>\n                                <th>ID</th>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Email</th>\n                                <th>Created At</th>\n                            </tr>\n\n                            {this.state.contacts.map(function (contact) {\n                                return (\n                                    <tr key={contact.id}>\n                                        <td>{contact.id}</td>\n                                        <td>{contact.first_name}</td>\n                                        <td>{contact.last_name}</td>\n                                        <td>{contact.email}</td>\n                                        <td>{contact.created_at}</td>\n                                        <td>\n                                            <Link to={\"/app/contacts/\" + contact.id + \"/edit\"}>\n                                                <i className=\"fa fa-edit\"/>\n                                            </Link>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                            </tbody>\n                        </table>\n\n                        <div className=\"container\">\n                            <div className=\"col-md-12 pull-left text-center\">\n                                <ReactPaginate previousLabel={\"previous\"}\n                                               nextLabel={\"next\"}\n                                               breakLabel={\"...\"}\n                                               breakClassName={\"break-me\"}\n                                               pageCount={this.state.totalPageCount}\n                                               marginPagesDisplayed={1}\n                                               pageRangeDisplayed={6}\n                                               onPageChange={this.handlePageChange.bind(this)}\n                                               containerClassName={\"pagination\"}\n                                               subContainerClassName={\"pages pagination\"}\n                                               activeClassName={\"active\"}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import {connect} from \"react-redux\";\nimport {all} from \"../../../Actions/ContactList/all\";\nimport Component from \"./Component\";\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        ...state.ContactListReducer,\n        ...state.AuthReducer\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        all: (page, limit, searchTerm) => {\n            dispatch(\n                all(page, limit, searchTerm)\n            );\n        }\n    }\n};\n\nexport const Container = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Component);\n","import {GET_ALL_CONTACTS} from \"../../Helpers/Constants\";\n\nexport function all(page, limit, searchTerm) {\n    return {\n        type: GET_ALL_CONTACTS,\n        page: page,\n        limit: limit,\n        searchTerm: searchTerm,\n        redirect: false\n    }\n}\n","/// dashboard\nexport const DASHBOARD_VISITED = 'DASHBOARD_VISITED';\n\n/// auth\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const USER_LOGGED_IN = 'USER_LOGGED_IN';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const USER_LOGGED_OUT = 'USER_LOGGED_OUT';\nexport const LOGIN_SCREEN_DISPLAYED = 'LOGIN_SCREEN_DISPLAYED';\n\n/// contact list\nexport const GET_ALL_CONTACTS = 'GET_ALL_CONTACTS';\nexport const RECEIVED_ALL_CONTACTS = 'RECEIVED_ALL_CONTACTS';\nexport const EDIT_CONTACT = 'EDIT_CONTACT';\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\nexport const CONTACT_UPDATED = 'CONTACT_UPDATED';\nexport const RECEIVED_CONTACT_FOR_EDIT = 'RECEIVED_CONTACT_FOR_EDIT';\nexport const SAVE_CONTACT = 'SAVE_CONTACT';\nexport const CONTACT_SAVED = 'CONTACT_SAVED';\nexport const CREATE_CONTACT = 'CREATE_CONTACT';\n\n/// user\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\nexport const RECEIVED_ALL_USERS = 'RECEIVED_ALL_USERS';\nexport const EDIT_USER = 'EDIT_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const USER_UPDATED = 'USER_UPDATED';\nexport const RECEIVED_USER_FOR_EDIT = 'RECEIVED_USER_FOR_EDIT';\nexport const SAVE_USER = 'SAVE_USER';\nexport const USER_SAVED = 'USER_SAVED';\nexport const CREATE_USER = 'CREATE_USER';","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport default class Component extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contact: {\n                id: '',\n                first_name: '',\n                last_name: '',\n                email: ''\n            },\n            redirect: false,\n            actionType: 'create'\n        };\n\n        if (this.props.match.params.id) {\n            this.props.edit(this.props.match.params.id);\n            this.state.actionType = 'edit';\n        } else {\n            this.props.create();\n        }\n    }\n\n    handleFirstNameChange(e) {\n        let state = this.state;\n        state.contact.first_name = e.target.value;\n        this.setState(state);\n    }\n\n    handleLastNameChange(e) {\n        let state = this.state;\n        state.contact.last_name = e.target.value;\n        this.setState(state);\n    }\n\n    handleEmailChange(e) {\n        let state = this.state;\n        state.contact.email = e.target.value;\n        this.setState(state);\n    }\n\n    componentWillReceiveProps(newProps) {\n        let state = this.state;\n        if (this.props.match.params.id) {\n            state.contact = newProps.contact;\n        }\n        state.redirect = newProps.redirect;\n        this.setState(state);\n    }\n\n    handleSubmit() {\n        let state = this.state;\n        let data = {\n            first_name: state.contact.first_name,\n            last_name: state.contact.last_name,\n            email: state.contact.email\n        };\n        if (state.contact.id) {\n            this.props.update(state.contact.id, data);\n        } else {\n            this.props.save(data);\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            this.props.history.push(this.state.redirect);\n            return null;\n        }\n\n        return (\n            <div className=\"box\">\n                <div className=\"box-header\">\n                    <h3 className=\"box-title\">{this.state.contact.id ? \"Edit Contact\" : \"New Contact\"}</h3>\n                </div>\n                <form className=\"form-horizontal\">\n                    <div className=\"box-body\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"first_name\" className=\"col-sm-2 control-label\">First Name</label>\n\n                            <div className=\"col-sm-10\">\n                                <input type=\"text\" name=\"first_name\" value={this.state.contact.first_name}\n                                       onChange={this.handleFirstNameChange.bind(this)}\n                                       className=\"form-control\"\n                                       id=\"first_name\"\n                                       maxLength={32}\n                                       required\n                                       placeholder=\"First Name\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"last_name\" className=\"col-sm-2 control-label\">Last Name</label>\n\n                            <div className=\"col-sm-10\">\n                                <input name=\"last_name\"\n                                       onChange={this.handleLastNameChange.bind(this)}\n                                       className=\"form-control\"\n                                       id=\"last_name\"\n                                       maxLength={40}\n                                       required\n                                       placeholder=\"Last Name\" value={this.state.contact.last_name}/>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\" className=\"col-sm-2 control-label\">Email</label>\n\n                            <div className=\"col-sm-10\">\n                                <input name=\"email\"\n                                       onChange={this.handleEmailChange.bind(this)} className=\"form-control\"\n                                       id=\"email\"\n                                       type=\"email\"\n                                       maxLength={72}\n                                       required\n                                       placeholder=\"Email\" value={this.state.contact.email}/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"box-footer\">\n                        <div className=\"col-md-2 pull-left\">\n                            <Link to=\"/app/contacts\" className=\"btn btn-block btn-success btn-flat\">\n                                Back to list\n                            </Link>\n                        </div>\n                        <div className=\"col-md-3 pull-right\">\n                            <button type=\"button\" onClick={this.handleSubmit.bind(this)}\n                                    className=\"btn btn-info pull-right\">\n                                {this.state.contact.id ? \"Update Contact\" : \"Save Contact\"}\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import {connect} from \"react-redux\";\nimport Component from \"./Component\";\nimport {create} from \"../../../Actions/ContactList/create\";\nimport {edit} from \"../../../Actions/ContactList/edit\";\nimport {update} from \"../../../Actions/ContactList/update\";\nimport {save} from \"../../../Actions/ContactList/save\";\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        ...state.ContactListReducer,\n        ...state.AuthReducer\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        create: () => {\n            dispatch(create());\n        },\n        edit: (id) => {\n            dispatch(edit(id));\n        },\n        update: (id, data) => {\n            dispatch(update(id, data));\n        },\n        save: (data) => {\n            dispatch(save(data));\n        },\n    }\n};\n\nexport const Container = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Component);\n","import {CREATE_CONTACT} from \"../../Helpers/Constants\";\n\nexport function create() {\n    return {\n        type: CREATE_CONTACT,\n        redirect: false\n    }\n}\n","import {EDIT_CONTACT} from \"../../Helpers/Constants\";\n\nexport function edit(id) {\n    return {\n        type: EDIT_CONTACT,\n        id: id,\n        redirect: false\n    }\n}\n","import {UPDATE_CONTACT} from \"../../Helpers/Constants\";\n\nexport function update(id, contact) {\n    return {\n        type: UPDATE_CONTACT,\n        id: id,\n        contact: contact,\n        redirect: false\n    }\n}\n","import {SAVE_CONTACT} from \"../../Helpers/Constants\";\n\nexport function save(contact) {\n    return {\n        type: SAVE_CONTACT,\n        contact: contact,\n        redirect: false\n    }\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\nexport default class Component extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirect: false,\n            users: [],\n            activePage: 1,\n            perPage: 4,\n            totalPageCount: 1,\n            selectedPage: 1,\n            searchTerm: \"\"\n        };\n\n        this.props.all(this.state.activePage, this.state.perPage, this.state.searchTerm);\n    }\n\n    componentWillReceiveProps(newProps) {\n        let state = this.state;\n        state.users = newProps.users;\n        state.totalPageCount = newProps.totalPageCount;\n        state.redirect = newProps.redirect;\n        this.setState(state);\n    }\n\n    handlePageChange(data) {\n        let state = this.state;\n        state.selectedPage = data.selected + 1;\n        this.setState(state);\n        this.props.all(state.selectedPage, this.state.perPage, this.state.searchTerm);\n    }\n\n    search(e) {\n        let state = this.state;\n        state.searchTerm = e.target.value;\n        this.setState(state);\n        this.props.all(1, this.state.perPage, e.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"box\">\n                    <div className=\"box-header\">\n                        <h3 className=\"box-title\">Users List</h3>\n\n                        <div className=\"box-tools\">\n                            <div className=\"input-group input-group-sm\" style={{'width': '150px'}}>\n                                <input type=\"text\" name=\"table_search\" className=\"form-control pull-right\"\n                                       placeholder=\"Search\" onChange={this.search.bind(this)}/>\n\n                                <div className=\"input-group-btn\">\n                                    <button type=\"submit\" className=\"btn btn-default\"><i\n                                        className=\"fa fa-search\"/></button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"box-body table-responsive no-padding\">\n                        <table className=\"table table-hover\">\n                            <tbody>\n                            <tr>\n                                <th>ID</th>\n                                <th>Username</th>\n                                <th>Password</th>\n                            </tr>\n\n                            {this.state.users.map(function (user) {\n                                return (\n                                    <tr key={user.id}>\n                                        <td>{user.id}</td>\n                                        <td>{user.username}</td>\n                                        <td>********</td>\n                                        <td>\n                                            <Link to={\"/app/users/\" + user.id + \"/edit\"}>\n                                                <i className=\"fa fa-edit\"/>\n                                            </Link>\n                                        </td>\n                                    </tr>\n                                );\n                            })}\n                            </tbody>\n                        </table>\n\n                        <div className=\"container\">\n                            <div className=\"col-md-12 pull-left text-center\">\n                                <ReactPaginate previousLabel={\"previous\"}\n                                               nextLabel={\"next\"}\n                                               breakLabel={\"...\"}\n                                               breakClassName={\"break-me\"}\n                                               pageCount={this.state.totalPageCount}\n                                               marginPagesDisplayed={1}\n                                               pageRangeDisplayed={6}\n                                               onPageChange={this.handlePageChange.bind(this)}\n                                               containerClassName={\"pagination\"}\n                                               subContainerClassName={\"pages pagination\"}\n                                               activeClassName={\"active\"}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import {connect} from \"react-redux\";\nimport {all} from \"../../../Actions/User/all\";\nimport Component from \"./Component\";\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        ...state.UserReducer,\n        ...state.AuthReducer\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        all: (page, limit, searchTerm) => {\n            dispatch(\n                all(page, limit, searchTerm)\n            );\n        }\n    }\n};\n\nexport const Container = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Component);\n","import {GET_ALL_USERS} from \"../../Helpers/Constants\";\n\nexport function all(page, limit, searchTerm) {\n    return {\n        type: GET_ALL_USERS,\n        page: page,\n        limit: limit,\n        searchTerm: searchTerm,\n        redirect: false\n    }\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport default class Component extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {\n                id: '',\n                username: '',\n                password: ''\n            },\n            redirect: false,\n            actionType: 'create'\n        };\n\n        if (this.props.match.params.id) {\n            this.props.edit(this.props.match.params.id);\n            this.state.actionType = 'edit';\n        } else {\n            this.props.create();\n        }\n    }\n\n    handleUsernameChange(e) {\n        let state = this.state;\n        state.user.username = e.target.value;\n        this.setState(state);\n    }\n\n    handlePasswordChange(e) {\n        let state = this.state;\n        state.user.password = e.target.value;\n        this.setState(state);\n    }\n\n    componentWillReceiveProps(newProps) {\n        let state = this.state;\n        if (this.props.match.params.id) {\n            state.user = newProps.user;\n            state.user.password = '';\n        }\n        state.redirect = newProps.redirect;\n        this.setState(state);\n    }\n\n    handleSubmit() {\n        let state = this.state;\n        let data = {\n            username: state.user.username,\n            password: state.user.password\n        };\n        if (state.user.id) {\n            this.props.update(state.user.id, data);\n        } else {\n            this.props.save(data);\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            this.props.history.push(this.state.redirect);\n            return null;\n        }\n\n        return (\n            <div className=\"box\">\n                <div className=\"box-header\">\n                    <h3 className=\"box-title\">{this.state.user.id ? \"Edit User\" : \"New User\"}</h3>\n                </div>\n                <form className=\"form-horizontal\">\n                    <div className=\"box-body\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\" className=\"col-sm-2 control-label\">Username</label>\n\n                            <div className=\"col-sm-10\">\n                                <input type=\"text\" name=\"username\" value={this.state.user.username}\n                                       onChange={this.handleUsernameChange.bind(this)}\n                                       className=\"form-control\"\n                                       id=\"username\"\n                                       maxLength={32}\n                                       required\n                                       placeholder=\"Username\"/>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\" className=\"col-sm-2 control-label\">Password</label>\n\n                            <div className=\"col-sm-10\">\n                                <input name=\"password\"\n                                       onChange={this.handlePasswordChange.bind(this)}\n                                       className=\"form-control\"\n                                       id=\"password\"\n                                       maxLength={40}\n                                       required\n                                       placeholder=\"Password\" value={this.state.user.password}/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"box-footer\">\n                        <div className=\"col-md-2 pull-left\">\n                            <Link to=\"/app/users\" className=\"btn btn-block btn-success btn-flat\">\n                                Back to list\n                            </Link>\n                        </div>\n                        <div className=\"col-md-3 pull-right\">\n                            <button type=\"button\" onClick={this.handleSubmit.bind(this)}\n                                    className=\"btn btn-info pull-right\">\n                                {this.state.user.id ? \"Update User\" : \"Save User\"}\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import {connect} from \"react-redux\";\nimport Component from \"./Component\";\nimport {create} from \"../../../Actions/User/create\";\nimport {edit} from \"../../../Actions/User/edit\";\nimport {update} from \"../../../Actions/User/update\";\nimport {save} from \"../../../Actions/User/save\";\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        ...state.UserReducer,\n        ...state.AuthReducer\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        create: () => {\n            dispatch(create());\n        },\n        edit: (id) => {\n            dispatch(edit(id));\n        },\n        update: (id, data) => {\n            dispatch(update(id, data));\n        },\n        save: (data) => {\n            dispatch(save(data));\n        },\n    }\n};\n\nexport const Container = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Component);\n","import {CREATE_USER} from \"../../Helpers/Constants\";\n\nexport function create() {\n    return {\n        type: CREATE_USER,\n        redirect: false\n    }\n}\n","import {EDIT_USER} from \"../../Helpers/Constants\";\n\nexport function edit(id) {\n    return {\n        type: EDIT_USER,\n        id: id,\n        redirect: false\n    }\n}\n","import {UPDATE_USER} from \"../../Helpers/Constants\";\n\nexport function update(id, user) {\n    return {\n        type: UPDATE_USER,\n        id: id,\n        user: user,\n        redirect: false\n    }\n}\n","import {SAVE_USER} from \"../../Helpers/Constants\";\n\nexport function save(user) {\n    return {\n        type: SAVE_USER,\n        user: user,\n        redirect: false\n    }\n}\n","export default class SessionStorage {\n    static setUserData(token, username) {\n        sessionStorage.setItem('token', token);\n        sessionStorage.setItem('username', username);\n    }\n\n    static clearUserData() {\n        sessionStorage.removeItem('token');\n        sessionStorage.removeItem('username');\n    }\n\n    static getToken() {\n        return sessionStorage.getItem('token');\n    }\n\n    static getUsername() {\n        return sessionStorage.getItem('username');\n    }\n}","import React from 'react';\nimport SessionStorage from \"../../../Helpers/SessionStorage\";\n\nexport default class Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageHash: Date.now()\n        };\n    }\n\n    logoutUser() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <header className=\"main-header\">\n                <a href=\"/\" className=\"logo\">\n                    <span className=\"logo-mini\"><b>CL</b></span>\n                    <span className=\"logo-lg\"><b>Contact</b>List</span>\n                </a>\n                <nav className=\"navbar navbar-static-top\">\n                    <a href=\"#/\" className=\"sidebar-toggle\" data-toggle=\"push-menu\" role=\"button\">\n                        <span className=\"sr-only\">Toggle navigation</span>\n                        <span className=\"icon-bar\"/>\n                        <span className=\"icon-bar\"/>\n                        <span className=\"icon-bar\"/>\n                    </a>\n\n                    <div className=\"navbar-custom-menu\">\n                        <ul className=\"nav navbar-nav\">\n                            <li className=\"dropdown user user-menu\">\n                                <a href=\"#/\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">\n                                    <img\n                                        src=\"http://localhost/assets/images/profile.png\"\n                                        className=\"user-image\" alt=\"Alex\"/>\n                                    <span className=\"hidden-xs\">{SessionStorage.getUsername()}</span>\n                                </a>\n                                <ul className=\"dropdown-menu\">\n                                    <li className=\"user-header\">\n                                        <img\n                                            src=\"http://localhost/assets/images/profile.png\"\n                                            className=\"img-circle\" alt=\"web developer\"/>\n                                        <p>\n                                            {SessionStorage.getUsername()}\n                                        </p>\n                                    </li>\n                                    <li className=\"user-footer\">\n                                        <div className=\"pull-left\">\n                                        </div>\n                                        <div className=\"pull-right\">\n                                            <button className=\"btn btn-default btn-flat\"\n                                                    onClick={this.logoutUser.bind(this)}>Sign out\n                                            </button>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </header>\n        );\n    }\n}\n","import {DASHBOARD_VISITED} from \"../Helpers/Constants\";\n\nconst initialState = {};\n\nexport default function DashboardReducer(state, action) {\n    switch (action.type) {\n        case DASHBOARD_VISITED:\n            return Object.assign({}, initialState, state);\n        default:\n            return Object.assign({}, initialState, state);\n    }\n}\n","import SessionStorage from \"../Helpers/SessionStorage\";\nimport {NotificationManager} from \"react-notifications\";\n\nexport default class BaseClient {\n    handleError(res) {\n        if (typeof res.response !== 'undefined') {\n            if (res.response.status === 401) {\n                SessionStorage.clearUserData();\n                window.location.replace('/app#/');\n                NotificationManager.warning('Your session is expired!');\n            }\n            if (typeof res.response.data.error !== 'undefined') {\n                if (typeof res.response.data.error !== 'string') {\n                    for (let errorParameter in res.response.data.error) {\n                        let singleError = res.response.data.error[errorParameter];\n                        for (let errorKey in singleError) {\n                            NotificationManager.error(errorParameter + ' : ' + singleError[errorKey]);\n                        }\n                    }\n                } else {\n                    NotificationManager.error(res.response.data.error);\n                }\n            } else if (typeof res.response.data !== \"undefined\") {\n                if (typeof res.response.data.message !== \"undefined\" && typeof res.response.data.message === 'string') {\n                    NotificationManager.error(res.response.data.message);\n                } else {\n                    for (let errorParameter in res.response.data) {\n                        let singleError = res.response.data[errorParameter];\n                        for (let errorKey in singleError) {\n                            NotificationManager.error(errorParameter + ' : ' + singleError[errorKey]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","import store from \"../store.jsx\";\nimport {userLoggedIn} from \"../Actions/Auth/userLoggedIn\";\nimport axios from 'axios';\nimport SessionStorage from \"../Helpers/SessionStorage\";\nimport BaseClient from \"./BaseClient\";\n\nexport default class Auth extends BaseClient {\n    constructor() {\n        super();\n        this.baseUrl = window.apiUrl + 'auth';\n    }\n\n    loginUser = (username, password) => {\n        const url = this.baseUrl + '/login';\n        let user = {\n            username: username,\n            password: password\n        };\n        return axios.post(url, user)\n            .then(res => {\n                store.dispatch(userLoggedIn(res.data))\n            })\n            .catch(res => {\n                this.handleError(res);\n            });\n    };\n\n    logoutUser = () => {\n        SessionStorage.clearUserData();\n        window.location.replace('/app#/');\n    };\n}\n","import {USER_LOGGED_IN} from \"../../Helpers/Constants\";\n\nexport function userLoggedIn(data) {\n    return {\n        type: USER_LOGGED_IN,\n        token: data.token,\n        username: data.username,\n        email: data.email,\n        image: data.image\n    }\n}\n","import {LOGIN_SCREEN_DISPLAYED, LOGIN_USER, LOGOUT_USER, USER_LOGGED_IN, USER_LOGGED_OUT} from \"../Helpers/Constants\";\nimport Auth from \"../Clients/Auth\";\nimport SessionStorage from \"../Helpers/SessionStorage\";\n\nconst initialState = {\n    username: '',\n    password: '',\n    token: ''\n};\n\nexport default function AuthReducer(state, action) {\n    let authClient = new Auth();\n\n    switch (action.type) {\n        case LOGIN_USER:\n            authClient.loginUser(action.username, action.password);\n            return Object.assign({}, initialState, state);\n        case USER_LOGGED_IN:\n            SessionStorage.setUserData(action.token, action.username);\n            return Object.assign({}, state, action);\n        case LOGOUT_USER:\n            authClient.logoutUser();\n            return Object.assign({}, state, action);\n        case USER_LOGGED_OUT:\n            return Object.assign({}, state, action);\n        case LOGIN_SCREEN_DISPLAYED:\n            return Object.assign({}, state, action);\n        default:\n            return Object.assign({}, initialState, state);\n    }\n}\n","import store from \"../store.jsx\";\nimport axios from 'axios';\nimport BaseClient from \"./BaseClient\";\nimport {receivedAll} from \"../Actions/User/receivedAll\";\nimport SessionStorage from \"../Helpers/SessionStorage\";\nimport {receivedForEdit} from \"../Actions/User/receivedForEdit\";\nimport {saved} from \"../Actions/User/saved\";\nimport {updated} from \"../Actions/User/updated\";\n\nexport default class UserClient extends BaseClient {\n    constructor() {\n        super();\n        this.baseUrl = window.apiUrl + 'users';\n    }\n\n    all = (page, limit, searchTerm) => {\n        const url = this.baseUrl + '?page=' + page + '&limit=' + limit + '&searchTerm=' + searchTerm;\n        return axios.get(url, {\n            headers: {\n                token: SessionStorage.getToken(),\n                username: SessionStorage.getUsername(),\n            }\n        })\n            .then(res => {\n                store.dispatch(receivedAll(res.data.items, res.data.totalPageCount))\n            })\n            .catch(res => {\n                this.handleError(res);\n            });\n    };\n\n    edit = (id) => {\n        const url = this.baseUrl + '/' + id + '/edit';\n\n        return axios.get(url, {\n            headers: {\n                token: SessionStorage.getToken(),\n                username: SessionStorage.getUsername(),\n            }\n        })\n            .then(res => {\n                store.dispatch(receivedForEdit(res.data))\n            })\n            .catch(res => {\n                this.handleError(res);\n            });\n    };\n\n    save = (data) => {\n        const url = this.baseUrl;\n\n        return axios.post(url, data, {\n            headers: {\n                token: SessionStorage.getToken(),\n                username: SessionStorage.getUsername(),\n            }\n        })\n            .then(res => {\n                store.dispatch(saved())\n            })\n            .catch(res => {\n                this.handleError(res);\n            });\n    };\n\n    update = (id, data) => {\n        const url = this.baseUrl + '/' + id;\n\n        return axios.put(url, data, {\n            headers: {\n                token: SessionStorage.getToken(),\n                username: SessionStorage.getUsername(),\n            }\n        })\n            .then(res => {\n                store.dispatch(updated())\n            })\n            .catch(res => {\n                this.handleError(res);\n            });\n    };\n}\n","import {RECEIVED_ALL_USERS} from \"../../Helpers/Constants\";\n\nexport function receivedAll(users, totalPageCount) {\n    return {\n        type: RECEIVED_ALL_USERS,\n        users: users,\n        totalPageCount: totalPageCount,\n        redirect: false\n    }\n}\n","import {RECEIVED_USER_FOR_EDIT} from \"../../Helpers/Constants\";\n\nexport function receivedForEdit(user) {\n    return {\n        type: RECEIVED_USER_FOR_EDIT,\n        user: user,\n        redirect: false\n    }\n}\n","import {USER_SAVED} from \"../../Helpers/Constants\";\n\nexport function saved() {\n    return {\n        type: USER_SAVED,\n        redirect: '/app/users'\n    }\n}\n","import {USER_UPDATED} from \"../../Helpers/Constants\";\n\nexport function updated() {\n    return {\n        type: USER_UPDATED,\n        redirect: '/app/users'\n    }\n}\n","import {\n    CREATE_USER,\n    EDIT_USER,\n    GET_ALL_USERS,\n    RECEIVED_ALL_USERS,\n    RECEIVED_USER_FOR_EDIT,\n    SAVE_USER,\n    UPDATE_USER,\n    USER_SAVED,\n    USER_UPDATED\n} from \"../Helpers/Constants\";\nimport UserClient from \"../Clients/UserClient\";\n\nconst initialState = {\n    users: []\n};\n\nexport default function UserReducer(state = initialState, action) {\n    let userClient = new UserClient();\n\n    switch (action.type) {\n        case GET_ALL_USERS:\n            userClient.all(action.page, action.limit, action.searchTerm);\n            return Object.assign({}, initialState, state);\n        case RECEIVED_ALL_USERS:\n            return Object.assign({}, state, action);\n        case EDIT_USER:\n            userClient.edit(action.id);\n            return Object.assign({}, state);\n        case UPDATE_USER:\n            userClient.update(action.id, action.user);\n            return Object.assign({}, state);\n        case USER_UPDATED:\n            return Object.assign({}, state, action);\n        case RECEIVED_USER_FOR_EDIT:\n            return Object.assign({}, state, action);\n        case SAVE_USER:\n            userClient.save(action.user);\n            return Object.assign({}, state);\n        case USER_SAVED:\n            return Object.assign({}, state, action);\n        case CREATE_USER:\n            return Object.assign({}, state, action);\n        default:\n            return Object.assign({}, state);\n    }\n}\n","import store from \"../store.jsx\";\nimport axios from 'axios';\nimport BaseClient from \"./BaseClient\";\nimport {receivedAll} from \"../Actions/ContactList/receivedAll\";\nimport SessionStorage from \"../Helpers/SessionStorage\";\nimport {receivedForEdit} from \"../Actions/ContactList/receivedForEdit\";\nimport {saved} from \"../Actions/ContactList/saved\";\nimport {updated} from \"../Actions/ContactList/updated\";\n\nexport default class ContactListClient extends BaseClient {\n    constructor() {\n        super();\n        this.baseUrl = window.apiUrl + 'contacts';\n    }\n\n    all = (page, limit, searchTerm) => {\n        const url = this.baseUrl + '?page=' + page + '&limit=' + limit + '&searchTerm=' + searchTerm;\n        return axios.get(url, {\n            headers: {\n                token: SessionStorage.getToken(),\n                username: SessionStorage.getUsername(),\n            }\n        })\n            .then(res => {\n                store.dispatch(receivedAll(res.data.items, res.data.totalPageCount))\n            })\n            .catch(res => {\n                this.handleError(res);\n            });\n    };\n\n    edit = (id) => {\n        const url = this.baseUrl + '/' + id + '/edit';\n\n        return axios.get(url, {\n            headers: {\n                token: SessionStorage.getToken(),\n                username: SessionStorage.getUsername(),\n            }\n        })\n            .then(res => {\n                store.dispatch(receivedForEdit(res.data))\n            })\n            .catch(res => {\n                this.handleError(res);\n            });\n    };\n\n    save = (data) => {\n        const url = this.baseUrl;\n\n        return axios.post(url, data, {\n            headers: {\n                token: SessionStorage.getToken(),\n                username: SessionStorage.getUsername(),\n            }\n        })\n            .then(res => {\n                store.dispatch(saved())\n            })\n            .catch(res => {\n                this.handleError(res);\n            });\n    };\n\n    update = (id, data) => {\n        const url = this.baseUrl + '/' + id;\n\n        return axios.put(url, data, {\n            headers: {\n                token: SessionStorage.getToken(),\n                username: SessionStorage.getUsername(),\n            }\n        })\n            .then(res => {\n                store.dispatch(updated())\n            })\n            .catch(res => {\n                this.handleError(res);\n            });\n    };\n}\n","import {RECEIVED_ALL_CONTACTS} from \"../../Helpers/Constants\";\n\nexport function receivedAll(contacts, totalPageCount) {\n    return {\n        type: RECEIVED_ALL_CONTACTS,\n        contacts: contacts,\n        totalPageCount: totalPageCount,\n        redirect: false\n    }\n}\n","import {RECEIVED_CONTACT_FOR_EDIT} from \"../../Helpers/Constants\";\n\nexport function receivedForEdit(contact) {\n    return {\n        type: RECEIVED_CONTACT_FOR_EDIT,\n        contact: contact,\n        redirect: false\n    }\n}\n","import {CONTACT_SAVED} from \"../../Helpers/Constants\";\n\nexport function saved() {\n    return {\n        type: CONTACT_SAVED,\n        redirect: '/app/contacts'\n    }\n}\n","import {CONTACT_UPDATED} from \"../../Helpers/Constants\";\n\nexport function updated() {\n    return {\n        type: CONTACT_UPDATED,\n        redirect: '/app/contacts'\n    }\n}\n","import {\n    CONTACT_SAVED,\n    CONTACT_UPDATED,\n    CREATE_CONTACT,\n    EDIT_CONTACT,\n    GET_ALL_CONTACTS,\n    RECEIVED_ALL_CONTACTS,\n    RECEIVED_CONTACT_FOR_EDIT,\n    SAVE_CONTACT,\n    UPDATE_CONTACT\n} from \"../Helpers/Constants\";\nimport ContactListClient from \"../Clients/ContactListClient\";\n\nconst initialState = {\n    contacts: []\n};\n\nexport default function ContactListReducer(state = initialState, action) {\n    let contactListClient = new ContactListClient();\n\n    switch (action.type) {\n        case GET_ALL_CONTACTS:\n            contactListClient.all(action.page, action.limit, action.searchTerm);\n            return Object.assign({}, initialState, state);\n        case RECEIVED_ALL_CONTACTS:\n            return Object.assign({}, state, action);\n        case EDIT_CONTACT:\n            contactListClient.edit(action.id);\n            return Object.assign({}, state);\n        case UPDATE_CONTACT:\n            contactListClient.update(action.id, action.contact);\n            return Object.assign({}, state);\n        case CONTACT_UPDATED:\n            return Object.assign({}, state, action);\n        case RECEIVED_CONTACT_FOR_EDIT:\n            return Object.assign({}, state, action);\n        case SAVE_CONTACT:\n            contactListClient.save(action.contact);\n            return Object.assign({}, state);\n        case CONTACT_SAVED:\n            return Object.assign({}, state, action);\n        case CREATE_CONTACT:\n            return Object.assign({}, state, action);\n        default:\n            return Object.assign({}, state);\n    }\n}\n","import SessionStorage from \"../Helpers/SessionStorage\";\nimport {LOGIN_USER, LOGOUT_USER, USER_LOGGED_IN, USER_LOGGED_OUT} from \"../Helpers/Constants\";\nimport {logoutUser} from \"../Actions/Auth/logoutUser\";\n\nexport const AuthMiddleware = store => next => action => {\n    let token = SessionStorage.getToken();\n    if (action.type !== LOGIN_USER &&\n        action.type !== USER_LOGGED_IN &&\n        action.type !== USER_LOGGED_OUT &&\n        action.type !== LOGOUT_USER &&\n        (token === null || token === '' || token === \"undefined\")) {\n        store.dispatch(logoutUser())\n    } else {\n        next(action);\n    }\n};\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport * as browserHistory from \"react-router-redux\";\nimport {routerMiddleware} from \"react-router-redux\";\nimport DashboardReducer from \"./Reducers/DashboardReducer\";\nimport AuthReducer from \"./Reducers/AuthReducer\";\nimport UserReducer from \"./Reducers/UserReducer\";\nimport ContactListReducer from \"./Reducers/ContactListReducer\";\nimport {AuthMiddleware} from \"./Middlewares/AuthMiddleware\";\n\nconst middleware = routerMiddleware(browserHistory);\n\nlet store = createStore(\n    combineReducers({\n        DashboardReducer,\n        AuthReducer,\n        UserReducer,\n        ContactListReducer,\n    }),\n    applyMiddleware(\n        middleware,\n        AuthMiddleware\n    )\n);\n\nexport default store;","import {LOGOUT_USER} from \"../../Helpers/Constants\";\n\nexport function logoutUser() {\n    return {\n        type: LOGOUT_USER,\n        redirect: false\n    }\n}\n","import {connect} from \"react-redux\";\nimport Header from \"./Header\";\nimport store from \"../../../store\";\nimport {logoutUser} from \"../../../Actions/Auth/logoutUser\";\n\nconst mapStateToProps = (state, ownProps) => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logoutUser() {\n            store.dispatch(logoutUser());\n        }\n    }\n};\n\nconst HeaderContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n\nexport default HeaderContainer","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport SessionStorage from \"../../../Helpers/SessionStorage\";\n\nexport default class Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageHash: Date.now(),\n            currentRoute: this.props.location.pathname\n        };\n\n    }\n\n    componentWillReceiveProps(newProps) {\n        let state = this.state;\n        state.currentRoute = newProps.location.pathname;\n        this.setState(state);\n    }\n\n    render() {\n        return (\n            <div>\n                <aside className=\"main-sidebar\">\n                    <section className=\"sidebar\">\n                        <div className=\"user-panel\">\n                            <div className=\"pull-left image\">\n                                <img\n                                    src=\"http://localhost/assets/images/profile.png\"\n                                    className=\"img-circle\" alt=\"sidebar\"/>\n                            </div>\n                            <div className=\"pull-left info\">\n                                <p>{SessionStorage.getUsername()}</p>\n                                <Link to=\"#\"><i className=\"fa fa-circle text-success\"/> Online</Link>\n                            </div>\n                        </div>\n                        <ul className=\"sidebar-menu tree\" data-widget=\"tree\">\n                            <li className=\"header\">MAIN NAVIGATION</li>\n                            <li className=\"treeview active menu-open\">\n                                <Link to=\"/#\">\n                                    <i className=\"fa fa-files-o\"/>\n                                    <span>Contacts</span>\n                                </Link>\n                                <ul className=\"treeview-menu\">\n                                    <li className={this.state.currentRoute === '/app/contacts' ? \"active\" : \"\"}>\n                                        <Link to=\"/app/contacts\"><i className=\"fa fa-circle-o\"/> List Contacts</Link>\n                                    </li>\n                                    <li className={this.state.currentRoute === '/app/contacts/create' ? \"active\" : \"\"}>\n                                        <Link to=\"/app/contacts/create\"><i className=\"fa fa-circle-o\"/> Create New\n                                            Contact</Link>\n                                    </li>\n                                </ul>\n                            </li>\n                            <li className=\"treeview active menu-open\">\n                                <Link to=\"/#\">\n                                    <i className=\"fa fa-files-o\"/>\n                                    <span>Users</span>\n                                </Link>\n                                <ul className=\"treeview-menu\">\n                                    <li className={this.state.currentRoute === '/app/users' ? \"active\" : \"\"}>\n                                        <Link to=\"/app/users\"><i className=\"fa fa-circle-o\"/> List Users</Link>\n                                    </li>\n                                    <li className={this.state.currentRoute === '/app/users/create' ? \"active\" : \"\"}>\n                                        <Link to=\"/app/users/create\"><i className=\"fa fa-circle-o\"/> Create\n                                            User</Link>\n                                    </li>\n                                </ul>\n                            </li>\n                        </ul>\n                    </section>\n                </aside>\n\n            </div>\n        );\n    }\n}\n","import {connect} from \"react-redux\";\nimport Sidebar from \"./Sidebar\";\nimport {withRouter} from \"react-router-dom\";\n\nconst mapStateToProps = (state, ownProps) => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {}\n};\n\nconst SidebarContainer = withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Sidebar));\n\nexport default SidebarContainer","import React, {Component} from 'react';\nimport {Container as ContactListContainer} from \"./Components/Contacts/List/Container\";\nimport {Container as ContactListFormContainer} from \"./Components/Contacts/Form/Container\";\nimport {Container as UserContainer} from \"./Components/Users/List/Container\";\nimport {Container as UserFormContainer} from \"./Components/Users/Form/Container\";\nimport {Route} from \"react-router-dom\";\nimport HeaderContainer from \"./Components/Layout/Header/HeaderContainer\";\nimport SidebarContainer from \"./Components/Layout/Sidebar/SidebarContainer\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"wrapper\">\n\n                    <HeaderContainer/>\n                    <SidebarContainer/>\n\n                    <div className=\"content-wrapper\">\n\n                        <section className=\"content\">\n                            <Route\n                                exact\n                                path={'/app/contacts'}\n                                component={ContactListContainer}/>\n                            <Route\n                                exact\n                                path={'/app/contacts/create'}\n                                component={ContactListFormContainer}/>\n                            <Route\n                                exact\n                                path={'/app/contacts/:id/edit'}\n                                component={ContactListFormContainer}/>\n\n                            <Route\n                                exact\n                                path={'/app/users'}\n                                component={UserContainer}/>\n                            <Route\n                                exact\n                                path={'/app/users/create'}\n                                component={UserFormContainer}/>\n                            <Route\n                                exact\n                                path={'/app/users/:id/edit'}\n                                component={UserFormContainer}/>\n                        </section>\n\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import {connect} from \"react-redux\";\nimport App from \"./App\";\n\nconst mapStateToProps = (state, ownProps) => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {}\n};\n\nconst AppContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n\nexport default AppContainer","let createHistory = require(\"history\").createBrowserHistory;\n\nconst history = createHistory();\n\nexport default history\n","import React from 'react';\nimport SessionStorage from \"../../../Helpers/SessionStorage\";\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {\n                username: '',\n                password: ''\n            }\n        };\n\n        if (SessionStorage.getToken() !== '' && SessionStorage.getToken() !== null) {\n            this.props.history.push('/app/contacts');\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.token !== '') {\n            this.props.history.push('/app/contacts');\n        }\n    }\n\n    componentDidMount() {\n        document.body.classList.add('login-page')\n    }\n\n    componentWillUnmount() {\n        document.body.classList.remove('login-page')\n    }\n\n    handleUsernameChange(e) {\n        let state = this.state;\n        state.user.username = e.target.value;\n        this.setState(state);\n    }\n\n    handlePasswordChange(e) {\n        let state = this.state;\n        state.user.password = e.target.value;\n        this.setState(state);\n    }\n\n    handleSubmit() {\n        this.props.loginUser(this.state.user.username, this.state.user.password);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"login-box\">\n                    <div className=\"login-logo\">\n                        <a href=\"/\"><b>Contact</b>List</a>\n                    </div>\n                    <div className=\"login-box-body\">\n                        <p className=\"login-box-msg\">Sign in to start your session</p>\n\n                        <form>\n                            <div className=\"form-group has-feedback\">\n                                <input type=\"text\" className=\"form-control\" name=\"username\"\n                                       value={this.state.user.username} onChange={this.handleUsernameChange.bind(this)}\n                                       placeholder=\"Username\"/>\n                                <span className=\"glyphicon glyphicon-envelope form-control-feedback\"/>\n                            </div>\n                            <div className=\"form-group has-feedback\">\n                                <input type=\"password\" name=\"password\" value={this.state.user.password}\n                                       onChange={this.handlePasswordChange.bind(this)}\n                                       className=\"form-control\" placeholder=\"Password\"/>\n                                <span className=\"glyphicon glyphicon-lock form-control-feedback\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"button\" onClick={this.handleSubmit.bind(this)}\n                                        className=\"btn btn-primary btn-block btn-flat\">Sign In\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import {connect} from \"react-redux\";\nimport Login from \"./Login\";\nimport {loginUser} from \"../../../Actions/Auth/loginUser\";\nimport {loginScreenDisplayed} from \"../../../Actions/Auth/loginScreenDisplayed\";\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        ...state.AuthReducer\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loginUser: (username, password) => {\n            dispatch(\n                loginUser(username, password)\n            );\n        },\n        loginScreenDisplayed: () => {\n            dispatch(\n                loginScreenDisplayed()\n            );\n        }\n    }\n};\n\nconst LoginContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login);\n\nexport default LoginContainer","import {LOGIN_USER} from \"../../Helpers/Constants\";\n\nexport function loginUser(username, password) {\n    return {\n        type: LOGIN_USER,\n        username: username,\n        password: password,\n    }\n}\n","import {LOGIN_SCREEN_DISPLAYED} from \"../../Helpers/Constants\";\n\nexport function loginScreenDisplayed() {\n    return {\n        type: LOGIN_SCREEN_DISPLAYED,\n        redirect: false\n    }\n}\n","import React from 'react';\nimport {render} from 'react-dom'\nimport AppContainer from './AppContainer';\nimport {Provider} from \"react-redux\";\nimport {HashRouter, Route} from 'react-router-dom'\nimport jQuery from 'jquery';\nimport 'jquery/dist/jquery.min';\nimport 'admin-lte/dist/css/skins/_all-skins.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'admin-lte/dist/css/AdminLTE.min.css';\nimport \"./style.css\";\nimport store from \"./store\";\nimport {apiUrl} from \"./env\";\nimport history from \"./history\";\nimport LoginContainer from \"./Components/Auth/Login/LoginContainer\";\n\nwindow.jQuery = jQuery;\nrequire('admin-lte/dist/js/adminlte.min.js');\nrequire('bootstrap');\n\nwindow.apiUrl = apiUrl;\n\nrender((\n    <Provider store={store}>\n        <HashRouter history={history}>\n            <div>\n                <Route\n                    exact\n                    path=\"/\"\n                    component={LoginContainer}/>\n                <Route\n                    path=\"/app\"\n                    component={AppContainer}/>\n                <Route\n                    exact\n                    path=\"/app/login\"\n                    component={LoginContainer}/>\n            </div>\n        </HashRouter>\n    </Provider>\n), document.getElementById('root'));\n","export const apiUrl = 'http://localhost:80/';\n"],"sourceRoot":""}